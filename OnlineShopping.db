CREATE TABLE Customers (
    CustomerID INTEGER PRIMARY KEY AUTOINCREMENT,
    FirstName TEXT NOT NULL,
    LastName TEXT NOT NULL,
    Email TEXT UNIQUE NOT NULL,
    Phone TEXT,
    Country TEXT,
    JoinDate DATE
);

INSERT INTO Customers (FirstName, LastName, Email, Phone, Country, JoinDate)
VALUES 
('John', 'Doe', 'john.doe@example.com', '1234567890', 'USA', '2023-01-15'),
('Jane', 'Smith', 'jane.smith@example.com', '0987654321', 'UK', '2022-12-10'),
('Emily', 'Clark', 'emily.clark@example.com', '1122334455', 'Canada', '2023-03-10'),
('Michael', 'Brown', 'michael.brown@example.com', '1231231234', 'USA', '2022-11-05'),
('Sarah', 'Johnson', 'sarah.johnson@example.com', '3213214321', 'UK', '2021-06-18'),
('David', 'Lee', 'david.lee@example.com', '5555555555', 'Australia', '2023-02-25'),
('Anna', 'Taylor', 'anna.taylor@example.com', '9876543210', 'Germany', '2022-09-22'),
('James', 'Wilson', 'james.wilson@example.com', '1239874560', 'France', '2023-01-20'),
('Jessica', 'Martinez', 'jessica.martinez@example.com', '1112223333', 'Spain', '2023-04-12'),
('Chris', 'Anderson', 'chris.anderson@example.com', '9998887777', 'Italy', '2022-07-01');


CREATE TABLE Products (
    ProductID INTEGER PRIMARY KEY AUTOINCREMENT,
    ProductName TEXT NOT NULL,
    Category TEXT NOT NULL,
    Price REAL NOT NULL,
    StockQuantity INTEGER NOT NULL
);

-- Generate 1000+ products using loop
BEGIN TRANSACTION;
INSERT INTO Products (ProductName, Category, Price, StockQuantity)
VALUES 
('Laptop', 'Electronics', 999.99, 50),
('Smartphone', 'Electronics', 699.99, 30),
('Headphones', 'Accessories', 49.99, 100);

-- Generate additional 1000+ rows
WITH RECURSIVE generate_series AS (
    SELECT 1 AS n
    UNION ALL
    SELECT n + 1 FROM generate_series WHERE n < 1000
)
INSERT INTO Products (ProductName, Category, Price, StockQuantity)
SELECT 
    'Product ' || n,
    CASE WHEN n % 3 = 0 THEN 'Electronics'
         WHEN n % 3 = 1 THEN 'Accessories'
         ELSE 'Home & Kitchen'
    END AS Category,
    ROUND(10 + (RANDOM() % 990), 2) AS Price,
    RANDOM() % 100 AS StockQuantity
FROM generate_series;
COMMIT;


CREATE TABLE Orders (
    OrderID INTEGER PRIMARY KEY AUTOINCREMENT,
    CustomerID INTEGER,
    OrderDate DATE NOT NULL,
    ShippingStatus TEXT CHECK(ShippingStatus IN ('Ordered', 'Shipped', 'Delivered')),
    TotalAmount REAL NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

INSERT INTO Orders (CustomerID, OrderDate, ShippingStatus, TotalAmount)
VALUES 
(1, '2023-02-10', 'Ordered', 1049.98),
(2, '2023-03-05', 'Shipped', 699.99),
(3, '2023-01-15', 'Delivered', 1249.98),
(4, '2022-11-20', 'Ordered', 49.99),
(5, '2023-04-08', 'Shipped', 899.99),
(6, '2023-05-10', 'Delivered', 149.99),
(7, '2022-12-12', 'Ordered', 299.99),
(8, '2023-02-22', 'Shipped', 699.99),
(9, '2023-03-30', 'Delivered', 1049.98),
(10, '2023-04-15', 'Ordered', 649.99);


CREATE TABLE Order_Details (
    OrderDetailID INTEGER PRIMARY KEY AUTOINCREMENT,
    OrderID INTEGER,
    ProductID INTEGER,
    Quantity INTEGER NOT NULL,
    Price REAL NOT NULL,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

INSERT INTO Order_Details (OrderID, ProductID, Quantity, Price)
VALUES 
(1, 1, 1, 999.99),
(1, 3, 1, 49.99),
(2, 2, 1, 699.99),
(3, 1, 2, 999.99),
(4, 3, 1, 49.99),
(5, 2, 1, 699.99);

CREATE TABLE Shipping (
    ShippingID INTEGER PRIMARY KEY AUTOINCREMENT,
    OrderID INTEGER,
    ShippingDate DATE,
    ShippingStatus TEXT CHECK(ShippingStatus IN ('Pending', 'Shipped', 'Delivered')),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);

INSERT INTO Shipping (OrderID, ShippingDate, ShippingStatus)
VALUES 
(1, '2023-02-12', 'Shipped'),
(2, '2023-03-07', 'Delivered'),
(3, '2023-01-18', 'Delivered'),
(4, '2022-11-22', 'Pending'),
(5, '2023-04-10', 'Shipped');
